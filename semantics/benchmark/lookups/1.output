
Running executive from /srv/plexil-4
  Plan:           1.plx

[ResourceArbiterInterface:readResourceHierarchyFile] Unable to open file resource.data. No resources read.
[loadXmlFile] 1.plx
[parsePlan]entered
[checkPlan] entered
[pushSymbolTable] 0x1ee3a20
[checkNode] parsing element NodeId
[checkNode] parsing element VariableDeclarations
[checkNode] parsing element ExitCondition
[checkExpression] name = GT
[checkExpression] name = LookupOnChange
[checkExpression] name = StringValue
[checkExpression] name = IntegerValue
[checkExpression] name = IntegerValue
[checkNode] parsing element InvariantCondition
[checkExpression] name = NoChildFailed
[checkNode] parsing element NodeBody
[checkExpression] name = DeclareVariable
[checkExpression] name = IntegerValue
[checkNode] parsing element NodeId
[checkNode] parsing element RepeatCondition
[checkExpression] name = BooleanValue
[parseValue<Boolean>] value = "true" length = 4
[checkNode] parsing element InvariantCondition
[checkExpression] name = NoChildFailed
[checkNode] parsing element NodeBody
[checkNode] parsing element NodeId
[checkNode] parsing element NodeBody
[checkNode] parsing element NodeId
[checkNode] parsing element NodeBody
[checkExpression] name = IntegerVariable
[checkExpression] name = ADD
[checkExpression] name = IntegerVariable
[checkExpression] name = IntegerValue
[checkNode] parsing element NodeId
[checkNode] parsing element NodeBody
[checkExpression] name = StringValue
[checkExpression] name = StringValue
[checkExpression] name = IntegerVariable
[checkNode] parsing element NodeId
[checkNode] parsing element StartCondition
[checkExpression] name = Finished
[checkNode] parsing element NodeBody
[checkExpression] name = StringValue
[checkExpression] name = StringValue
[popSymbolTable] 0x1ee3a20
[constructPlan] ACTION
[pushSymbolTable] 0x1ee3a20
[parseNode] constructing node
[NodeFactory] initialized
[NodeImpl:NodeImpl] Constructor for "ACTION"
[NodeImpl:NodeImpl] common initialization
[NodeFactory] created node ACTION
[parseNode] Node ACTION created
[parseNode] parsing variable declarations
[createExpression] name = DeclareVariable
[createExpression] Created (Variable Integer count 0x1eee4b8 [i](UNKNOWN))
[parseNode] constructing body
[parseNode] constructing node
[NodeImpl:NodeImpl] Constructor for "BLOCK__0"
[NodeImpl:NodeImpl] common initialization
[NodeFactory] created node BLOCK__0
[parseNode] Node BLOCK__0 created
[parseNode] constructing body
[parseNode] constructing node
[NodeImpl:NodeImpl] Constructor for "Concurrence__1"
[NodeImpl:NodeImpl] common initialization
[NodeFactory] created node Concurrence__1
[parseNode] Node Concurrence__1 created
[parseNode] constructing body
[parseNode] constructing node
[NodeImpl:NodeImpl] Constructor for "ASSIGNMENT__2"
[NodeImpl:NodeImpl] common initialization
[NodeFactory] created node ASSIGNMENT__2
[parseNode] Node ASSIGNMENT__2 created
[parseNode] constructing body
[parseNode] first pass done.
[parseNode] constructing node
[NodeImpl:NodeImpl] Constructor for "COMMAND__3"
[NodeImpl:NodeImpl] common initialization
[NodeFactory] created node COMMAND__3
[parseNode] Node COMMAND__3 created
[parseNode] constructing body
[parseNode] first pass done.
[parseNode] first pass done.
[parseNode] first pass done.
[parseNode] constructing node
[NodeImpl:NodeImpl] Constructor for "COMMAND__4"
[NodeImpl:NodeImpl] common initialization
[NodeFactory] created node COMMAND__4
[parseNode] Node COMMAND__4 created
[parseNode] constructing body
[parseNode] first pass done.
[parseNode] first pass done.
[popSymbolTable] 0x1ee3a20
[pushSymbolTable] 0x1ee3a20
[finalizeNode] node ACTION
[finalizeNode] constructing variable initializers for ACTION
[Node:findLocalVariable] ACTION Returning (Variable Integer count 0x1eee4b8 [i](UNKNOWN))
[createExpression] name = IntegerValue
[createExpression] Created reference to (Constant Integer 0x7f5ab8b061a0 [a](0))
[finalizeNode] processing condition ExitCondition
[createExpression] name = GT
[createExpression] name = LookupOnChange
[createExpression] name = StringValue
[createExpression] Created (Constant String 0x1eee780 [a](tick))
[createExpression] name = IntegerValue
[createExpression] Created (Constant Integer 0x1eee6e0 [a](2))
[createExpression] Created (LookupOnChange Integer 0x1eef300 [i](UNKNOWN) name (Constant String 0x1eee780 [a](tick)) )
[createExpression] name = IntegerValue
[createExpression] Created (Constant Integer 0x1eee710 [a](10))
[createExpression] Created (GT Boolean 0x1eef3c0 [i](UNKNOWN) (LookupOnChange Integer 0x1eef300 [i](UNKNOWN) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
[finalizeNode] processing condition InvariantCondition
[createExpression] name = NoChildFailed
[createExpression] Created (NoChildFailed Boolean ACTION0x1eef0d0 [i](1))
[finalizeNode] node BLOCK__0
[finalizeNode] processing condition RepeatCondition
[createExpression] name = BooleanValue
[parseValue<Boolean>] value = "true" length = 4
[createExpression] Created reference to (Constant Boolean 0x7f5ab8b061d0 [a](1))
[finalizeNode] processing condition InvariantCondition
[createExpression] name = NoChildFailed
[createExpression] Created (NoChildFailed Boolean BLOCK__00x1eef900 [i](1))
[finalizeNode] node Concurrence__1
[finalizeNode] node ASSIGNMENT__2
[createExpression] name = IntegerVariable
[Node:findVariable] node ASSIGNMENT__2, for count
[Node:findVariable] node ASSIGNMENT__2 returning (Variable Integer count 0x1eee4b8 [i](UNKNOWN)) from ancestor map
[createExpression] Created reference to (Variable Integer count 0x1eee4b8 [i](UNKNOWN))
[createExpression] name = ADD
[createExpression] name = IntegerVariable
[Node:findVariable] node ASSIGNMENT__2, for count
[Node:findVariable] node ASSIGNMENT__2 returning (Variable Integer count 0x1eee4b8 [i](UNKNOWN)) from ancestor map
[createExpression] Created reference to (Variable Integer count 0x1eee4b8 [i](UNKNOWN))
[createExpression] name = IntegerValue
[createExpression] Created reference to (Constant Integer 0x7f5ab8b061b0 [a](1))
[createExpression] Created (ADD Integer 0x1eefb30 [i](UNKNOWN) (Variable Integer count 0x1eee4b8 [i](UNKNOWN)) (Constant Integer 0x7f5ab8b061b0 [a](1)))
[finalizeNode] node COMMAND__3
[createExpression] name = StringValue
[createExpression] Created (Constant String 0x1eefbe0 [a](pprint))
[createExpression] name = StringValue
[createExpression] Created (Constant String 0x1eefc20 [a](Iteration))
[createExpression] name = IntegerVariable
[Node:findVariable] node COMMAND__3, for count
[Node:findVariable] node COMMAND__3 returning (Variable Integer count 0x1eee4b8 [i](UNKNOWN)) from ancestor map
[createExpression] Created reference to (Variable Integer count 0x1eee4b8 [i](UNKNOWN))
[finalizeNode] node COMMAND__4
[finalizeNode] processing condition StartCondition
[createExpression] name = Finished
[createExpression] Created (Finished Boolean BLOCK__00x1eefce0 [i](0))
[createExpression] name = StringValue
[createExpression] Created (Constant String 0x1eefc60 [a](pprint))
[createExpression] name = StringValue
[createExpression] Created (Constant String 0x1eefca0 [a](This should never be printed))
[popSymbolTable] 0x1ee3a20
[ExecListener:implementNotifyAddPlan] default method called
[PlexilExec:addPlan]Added plan: 
ACTION{
 State: INACTIVE (0)
  BLOCK__0{
   State: INACTIVE (0)
    Concurrence__1{
     State: INACTIVE (0)
      ASSIGNMENT__2{
       State: INACTIVE (0)
      }
      COMMAND__3{
       State: INACTIVE (0)
      }
    }
  }
  COMMAND__4{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[loadXmlFile] 1.psx
[Test:testOutput]Creating initial state tick() = 0
[ExternalInterface:lookupReturn](tick(), 0)
[CachedValue:update] updated to 0
[CachedValue:update] updated to 0
[PlexilExec:cycle] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: ACTION 0x1eee210 
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state INACTIVE
[Node:getDestState] ACTION 0x1eee210 INACTIVE -> WAITING. Root node.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ACTION 0x1eee210 for state transition.
[PlexilExec:addStateChangeNode] Placing node ACTION 0x1eee210 on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: ACTION 0x1eee210 
[PlexilExec:step][1:0:0] Transitioning node ACTION 0x1eee210 from INACTIVE to WAITING
[Node:transition]Transitioning ACTION 0x1eee210 from INACTIVE to WAITING at 0
[LookupOnChange:handleActivate] called
[Lookup:handleActivate] called
[Lookup:register] tick()
[StateCacheEntry:registerLookup] tick() subscribing to interface
[Test:testOutput]Registering change lookup for tick()
[StateCacheEntry:registerLookup] tick() now has 1 lookups
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:update] tick() constructing initial threshold
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds -2, 2
[CachedValue:update] updated to -2
[CachedValue:update] updated to 2
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][1:1] Check queue: ACTION 0x1eee210 BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state WAITING
[Node:getDestState] ACTION 0x1eee210 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ACTION 0x1eee210 for state transition.
[PlexilExec:addStateChangeNode] Placing node ACTION 0x1eee210 on the state change queue in position 2
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state INACTIVE
[Node:getDestState] BLOCK__0 0x1eee7c0 INACTIVE -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state INACTIVE
[Node:getDestState] COMMAND__4 0x1eee570 INACTIVE -> no change.
[PlexilExec:step][1:1] State change queue: ACTION 0x1eee210 
[PlexilExec:step][1:1:0] Transitioning node ACTION 0x1eee210 from WAITING to EXECUTING
[Node:transition]Transitioning ACTION 0x1eee210 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[Node:execute] Executing node ACTION
[PlexilExec:handleNeedsExecution] Storing action for node ACTION 0x1eee210 of type NodeList to be executed.
[PlexilExec:step][1:2] Check queue: ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state INACTIVE
[Node:getDestState] BLOCK__0 0x1eee7c0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 3
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state INACTIVE
[Node:getDestState] COMMAND__4 0x1eee570 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__4 0x1eee570 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__4 0x1eee570 on the state change queue in position 4
[PlexilExec:step][1:2] State change queue: BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[PlexilExec:step][1:2:0] Transitioning node BLOCK__0 0x1eee7c0 from INACTIVE to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][1:2:1] Transitioning node COMMAND__4 0x1eee570 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__4 0x1eee570 from INACTIVE to WAITING at 0
[PlexilExec:step][1:3] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 5
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][1:3] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][1:3:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][1:4] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 6
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> no change.
[PlexilExec:step][1:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][1:4:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][1:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 7
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> no change.
[PlexilExec:step][1:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][1:5:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][1:6] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 8
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 9
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][1:6] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][1:6:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][1:6:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][1:7] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](0))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 10
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 11
[PlexilExec:step][1:7] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][1:7:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][1:7:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](0)) to 1
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 0) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 0 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'ACTION' started at 0
[Node:clock]Node 'ACTION' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 1
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](1))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 1
[ExternalInterface:lookupReturn](tick(), 1)
[CachedValue:update] updated to 1
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() value changed but within tolerances
[LookupOnChange:valueChanged] for tick(): no change
[PlexilExec:cycle] ==>Start cycle 2
[PlexilExec:step][2:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 12
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](1))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](1)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 13
[PlexilExec:step][2:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][2:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][2:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][2:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 14
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 15
[PlexilExec:step][2:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][2:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][2:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][2:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 16
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][2:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][2:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][2:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 17
[PlexilExec:step][2:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][2:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][2:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 18
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][2:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][2:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][2:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 19
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][2:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][2:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][2:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 20
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][2:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][2:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][2:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 21
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][2:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][2:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][2:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 22
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][2:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][2:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][2:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 23
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 24
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][2:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][2:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][2:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][2:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 25
[PlexilExec:step][2:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][2:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][2:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 26
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 27
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 28
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][2:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][2:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][2:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][2:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][2:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 29
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 30
[PlexilExec:step][2:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][2:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][2:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][2:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](1))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 31
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 32
[PlexilExec:step][2:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][2:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][2:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](1)) to 2
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 1) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 1 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 2
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](2))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](0) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 2
[ExternalInterface:lookupReturn](tick(), 2)
[CachedValue:update] updated to 2
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() threshold exceeded, propagating value and updating thresholds
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds 0, 4
[CachedValue:update] updated to 0
[CachedValue:update] updated to 4
[LookupOnChange:valueChanged] for tick(): notifying listeners
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:cycle] ==>Start cycle 3
[PlexilExec:step][3:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 33
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](2))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](2)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 34
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][3:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][3:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][3:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][3:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 35
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 36
[PlexilExec:step][3:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][3:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][3:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][3:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 37
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][3:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][3:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][3:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 38
[PlexilExec:step][3:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][3:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][3:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 39
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][3:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][3:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][3:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 40
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][3:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][3:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][3:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 41
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][3:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][3:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][3:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 42
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][3:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][3:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][3:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 43
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][3:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][3:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][3:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 44
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 45
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][3:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][3:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][3:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][3:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 46
[PlexilExec:step][3:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][3:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][3:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 47
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 48
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 49
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][3:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][3:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][3:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][3:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][3:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 50
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 51
[PlexilExec:step][3:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][3:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][3:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][3:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](2))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 52
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 53
[PlexilExec:step][3:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][3:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][3:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](2)) to 3
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 2) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 2 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 3
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](3))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 3
[ExternalInterface:lookupReturn](tick(), 3)
[CachedValue:update] updated to 3
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() value changed but within tolerances
[LookupOnChange:valueChanged] for tick(): no change
[PlexilExec:cycle] ==>Start cycle 4
[PlexilExec:step][4:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 54
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](3))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](3)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 55
[PlexilExec:step][4:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][4:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][4:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][4:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 56
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 57
[PlexilExec:step][4:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][4:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][4:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][4:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 58
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][4:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][4:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][4:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 59
[PlexilExec:step][4:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][4:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][4:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 60
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][4:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][4:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][4:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 61
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][4:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][4:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][4:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 62
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][4:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][4:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][4:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 63
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][4:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][4:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][4:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 64
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][4:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][4:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][4:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 65
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 66
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][4:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][4:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][4:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][4:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 67
[PlexilExec:step][4:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][4:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][4:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 68
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 69
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 70
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][4:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][4:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][4:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][4:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][4:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 71
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 72
[PlexilExec:step][4:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][4:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][4:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][4:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](3))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 73
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 74
[PlexilExec:step][4:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][4:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][4:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](3)) to 4
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 3) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 3 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 4
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](4))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](2) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 4
[ExternalInterface:lookupReturn](tick(), 4)
[CachedValue:update] updated to 4
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() threshold exceeded, propagating value and updating thresholds
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds 2, 6
[CachedValue:update] updated to 2
[CachedValue:update] updated to 6
[LookupOnChange:valueChanged] for tick(): notifying listeners
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:cycle] ==>Start cycle 5
[PlexilExec:step][5:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 75
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](4))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](4)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 76
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][5:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][5:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][5:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][5:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 77
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 78
[PlexilExec:step][5:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][5:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][5:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][5:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 79
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][5:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][5:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][5:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 80
[PlexilExec:step][5:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][5:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][5:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 81
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][5:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][5:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][5:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 82
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][5:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][5:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][5:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 83
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][5:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][5:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][5:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 84
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][5:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][5:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][5:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 85
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][5:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][5:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][5:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 86
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 87
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][5:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][5:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][5:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][5:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 88
[PlexilExec:step][5:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][5:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][5:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 89
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 90
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 91
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][5:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][5:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][5:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][5:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][5:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 92
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 93
[PlexilExec:step][5:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][5:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][5:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][5:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](4))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 94
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 95
[PlexilExec:step][5:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][5:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][5:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](4)) to 5
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 4) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 4 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 5
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](5))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 5
[ExternalInterface:lookupReturn](tick(), 5)
[CachedValue:update] updated to 5
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() value changed but within tolerances
[LookupOnChange:valueChanged] for tick(): no change
[PlexilExec:cycle] ==>Start cycle 6
[PlexilExec:step][6:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 96
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](5))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](5)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 97
[PlexilExec:step][6:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][6:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][6:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][6:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 98
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 99
[PlexilExec:step][6:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][6:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][6:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][6:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 100
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][6:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][6:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][6:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 101
[PlexilExec:step][6:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][6:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][6:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 102
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][6:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][6:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][6:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 103
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][6:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][6:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][6:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 104
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][6:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][6:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][6:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 105
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][6:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][6:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][6:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 106
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][6:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][6:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][6:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 107
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 108
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][6:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][6:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][6:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][6:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 109
[PlexilExec:step][6:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][6:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][6:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 110
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 111
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 112
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][6:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][6:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][6:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][6:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][6:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 113
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 114
[PlexilExec:step][6:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][6:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][6:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][6:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](5))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 115
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 116
[PlexilExec:step][6:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][6:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][6:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](5)) to 6
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 5) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 5 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 6
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](6))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](4) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 6
[ExternalInterface:lookupReturn](tick(), 6)
[CachedValue:update] updated to 6
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() threshold exceeded, propagating value and updating thresholds
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds 4, 8
[CachedValue:update] updated to 4
[CachedValue:update] updated to 8
[LookupOnChange:valueChanged] for tick(): notifying listeners
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:cycle] ==>Start cycle 7
[PlexilExec:step][7:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 117
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](6))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](6)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 118
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][7:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][7:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][7:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][7:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 119
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 120
[PlexilExec:step][7:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][7:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][7:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][7:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 121
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][7:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][7:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][7:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 122
[PlexilExec:step][7:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][7:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][7:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 123
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][7:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][7:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][7:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 124
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][7:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][7:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][7:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 125
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][7:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][7:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][7:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 126
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][7:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][7:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][7:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 127
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][7:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][7:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][7:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 128
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 129
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][7:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][7:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][7:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][7:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 130
[PlexilExec:step][7:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][7:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][7:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 131
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 132
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 133
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][7:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][7:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][7:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][7:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][7:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 134
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 135
[PlexilExec:step][7:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][7:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][7:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][7:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](6))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 136
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 137
[PlexilExec:step][7:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][7:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][7:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](6)) to 7
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 6) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 6 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 7
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](7))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 7
[ExternalInterface:lookupReturn](tick(), 7)
[CachedValue:update] updated to 7
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() value changed but within tolerances
[LookupOnChange:valueChanged] for tick(): no change
[PlexilExec:cycle] ==>Start cycle 8
[PlexilExec:step][8:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 138
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](7))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](7)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 139
[PlexilExec:step][8:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][8:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][8:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][8:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 140
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 141
[PlexilExec:step][8:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][8:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][8:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][8:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 142
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][8:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][8:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][8:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 143
[PlexilExec:step][8:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][8:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][8:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 144
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][8:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][8:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][8:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 145
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][8:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][8:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][8:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 146
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][8:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][8:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][8:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 147
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][8:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][8:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][8:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 148
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][8:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][8:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][8:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 149
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 150
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][8:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][8:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][8:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][8:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 151
[PlexilExec:step][8:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][8:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][8:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 152
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 153
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 154
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][8:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][8:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][8:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][8:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][8:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 155
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 156
[PlexilExec:step][8:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][8:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][8:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][8:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](7))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 157
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 158
[PlexilExec:step][8:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][8:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][8:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](7)) to 8
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 7) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 7 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 8
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](8))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](6) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 8
[ExternalInterface:lookupReturn](tick(), 8)
[CachedValue:update] updated to 8
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() threshold exceeded, propagating value and updating thresholds
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds 6, 10
[CachedValue:update] updated to 6
[CachedValue:update] updated to 10
[LookupOnChange:valueChanged] for tick(): notifying listeners
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:cycle] ==>Start cycle 9
[PlexilExec:step][9:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 159
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](8))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](8)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 160
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][9:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][9:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][9:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][9:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 161
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 162
[PlexilExec:step][9:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][9:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][9:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][9:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 163
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][9:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][9:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][9:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 164
[PlexilExec:step][9:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][9:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][9:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 165
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][9:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][9:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][9:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 166
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][9:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][9:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][9:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 167
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][9:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][9:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][9:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 168
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][9:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][9:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][9:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 169
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][9:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][9:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][9:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 170
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 171
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][9:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][9:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][9:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][9:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 172
[PlexilExec:step][9:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][9:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][9:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 173
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 174
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 175
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][9:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][9:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][9:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][9:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][9:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 176
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 177
[PlexilExec:step][9:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][9:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][9:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][9:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](8))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 178
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 179
[PlexilExec:step][9:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][9:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][9:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](8)) to 9
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 8) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 8 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 9
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](9))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 9
[ExternalInterface:lookupReturn](tick(), 9)
[CachedValue:update] updated to 9
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() value changed but within tolerances
[LookupOnChange:valueChanged] for tick(): no change
[PlexilExec:cycle] ==>Start cycle 10
[PlexilExec:step][10:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 180
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](9))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](9)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 181
[PlexilExec:step][10:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][10:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][10:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][10:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 182
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 183
[PlexilExec:step][10:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][10:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][10:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][10:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 184
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][10:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][10:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][10:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 185
[PlexilExec:step][10:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][10:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][10:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 186
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][10:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][10:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][10:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 187
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][10:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][10:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][10:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 188
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][10:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][10:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][10:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 189
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][10:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][10:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][10:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 190
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][10:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][10:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][10:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 191
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 192
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][10:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][10:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][10:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][10:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 193
[PlexilExec:step][10:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][10:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][10:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 194
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 195
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 196
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][10:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][10:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][10:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][10:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][10:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 197
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 198
[PlexilExec:step][10:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][10:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][10:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][10:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](9))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 199
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 200
[PlexilExec:step][10:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][10:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][10:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](9)) to 10
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 9) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 9 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 10
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](10))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](8) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 10
[ExternalInterface:lookupReturn](tick(), 10)
[CachedValue:update] updated to 10
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() threshold exceeded, propagating value and updating thresholds
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds 8, 12
[CachedValue:update] updated to 8
[CachedValue:update] updated to 12
[LookupOnChange:valueChanged] for tick(): notifying listeners
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:cycle] ==>Start cycle 11
[PlexilExec:step][11:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 201
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](10))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](10)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 202
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][11:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][11:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][11:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][11:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 203
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 204
[PlexilExec:step][11:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][11:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][11:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][11:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 205
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][11:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][11:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][11:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 206
[PlexilExec:step][11:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][11:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][11:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 207
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][11:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][11:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][11:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 208
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][11:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][11:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][11:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 209
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][11:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][11:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][11:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 210
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][11:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][11:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][11:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 211
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][11:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][11:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][11:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 212
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 213
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][11:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][11:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][11:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][11:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 214
[PlexilExec:step][11:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][11:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][11:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 215
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 216
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 217
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][11:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][11:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][11:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][11:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][11:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 218
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 219
[PlexilExec:step][11:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][11:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][11:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][11:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](10))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 220
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 221
[PlexilExec:step][11:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][11:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][11:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](10)) to 11
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 10) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 10 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 11
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](11))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 11
[ExternalInterface:lookupReturn](tick(), 11)
[CachedValue:update] updated to 11
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() value changed but within tolerances
[LookupOnChange:valueChanged] for tick(): no change
[PlexilExec:cycle] ==>Start cycle 12
[PlexilExec:step][12:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FINISHING. Command node and end condition true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 222
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> ITERATION_ENDED. Assignment node and End condition true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](11))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](11)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 223
[PlexilExec:step][12:0] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][12:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][12:0:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][12:1] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHING
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHING -> ITERATION_ENDED. Command node and action complete true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 224
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state ITERATION_ENDED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 225
[PlexilExec:step][12:1] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][12:1:0] Transitioning node COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHING to ITERATION_ENDED at 0
[ResourceArbiterInterface:releaseResourcesForCommand]remaining locked resources after releasing for command pprint
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][12:1:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is SUCCESS
[PlexilExec:step][12:2] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state ITERATION_ENDED
[Node:getDestState] COMMAND__3 0x1eeedf0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 226
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[PlexilExec:step][12:2] State change queue: COMMAND__3 0x1eeedf0 
[PlexilExec:step][12:2:0] Transitioning node COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:outcome]Outcome of COMMAND__3 0x1eeedf0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][12:3] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 227
[PlexilExec:step][12:3] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][12:3:0] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][12:4] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 228
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][12:4] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][12:4:0] Transitioning node Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][12:5] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state ITERATION_ENDED
[Node:getDestState] Concurrence__1 0x1eee9d0 ITERATION_ENDED -> FINISHED. REPEAT_CONDITION false.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 229
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][12:5] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][12:5:0] Transitioning node Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from ITERATION_ENDED to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:outcome]Outcome of Concurrence__1 0x1eee9d0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][12:6] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FINISHING. List node and END_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 230
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][12:6] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][12:6:0] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FINISHING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][12:7] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FINISHING
[AllWaitingOrFinished] result = true
[Node:getDestState] BLOCK__0 0x1eee7c0 FINISHING -> ITERATION_ENDED. List node and ALL_CHILDREN_WAITING_OR_FINISHED true.
[Node:checkConditions]Can (possibly) transition to ITERATION_ENDED
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 231
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[PlexilExec:step][12:7] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][12:7:0] Transitioning node BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from FINISHING to ITERATION_ENDED at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:outcome]Outcome of BLOCK__0 0x1eee7c0 is SUCCESS
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][12:8] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state ITERATION_ENDED
[Node:getDestState] BLOCK__0 0x1eee7c0 ITERATION_ENDED -> WAITING. REPEAT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 232
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][12:8] State change queue: BLOCK__0 0x1eee7c0 
[PlexilExec:step][12:8:0] Transitioning node BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from ITERATION_ENDED to WAITING at 0
[Node:reset] Re-setting node BLOCK__0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][12:9] Check queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 ACTION 0x1eee210 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state WAITING
[Node:getDestState] BLOCK__0 0x1eee7c0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 233
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FINISHED
[Node:getDestState] Concurrence__1 0x1eee9d0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 234
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[PlexilExec:step][12:9] State change queue: BLOCK__0 0x1eee7c0 Concurrence__1 0x1eee9d0 
[PlexilExec:step][12:9:0] Transitioning node BLOCK__0 0x1eee7c0 from WAITING to EXECUTING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[Node:execute] Executing node BLOCK__0
[PlexilExec:handleNeedsExecution] Storing action for node BLOCK__0 0x1eee7c0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][12:9:1] Transitioning node Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node Concurrence__1
[PlexilExec:step][12:10] Check queue: BLOCK__0 0x1eee7c0 ACTION 0x1eee210 COMMAND__4 0x1eee570 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> no change. START_CONDITION false or unknown
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state INACTIVE
[Node:getDestState] Concurrence__1 0x1eee9d0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 235
[PlexilExec:step][12:10] State change queue: Concurrence__1 0x1eee9d0 
[PlexilExec:step][12:10:0] Transitioning node Concurrence__1 0x1eee9d0 from INACTIVE to WAITING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][12:11] Check queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 BLOCK__0 0x1eee7c0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state WAITING
[Node:getDestState] Concurrence__1 0x1eee9d0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 236
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 237
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FINISHED
[Node:getDestState] COMMAND__3 0x1eeedf0 FINISHED -> INACTIVE. Parent state == WAITING.
[Node:checkConditions]Can (possibly) transition to INACTIVE
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 238
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[PlexilExec:step][12:11] State change queue: Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][12:11:0] Transitioning node Concurrence__1 0x1eee9d0 from WAITING to EXECUTING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[Node:execute] Executing node Concurrence__1
[PlexilExec:handleNeedsExecution] Storing action for node Concurrence__1 0x1eee9d0 of type NodeList to be executed.
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][12:11:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node ASSIGNMENT__2
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][12:11:2] Transitioning node COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from FINISHED to INACTIVE at 0
[Node:reset] Re-setting node COMMAND__3
[PlexilExec:step][12:12] Check queue: Concurrence__1 0x1eee9d0 BLOCK__0 0x1eee7c0 ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state INACTIVE
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 239
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state INACTIVE
[Node:getDestState] COMMAND__3 0x1eeedf0 INACTIVE -> WAITING. Parent state == EXECUTING.
[Node:checkConditions]Can (possibly) transition to WAITING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 240
[PlexilExec:step][12:12] State change queue: ASSIGNMENT__2 0x1eeebe0 COMMAND__3 0x1eeedf0 
[PlexilExec:step][12:12:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][12:12:1] Transitioning node COMMAND__3 0x1eeedf0 from INACTIVE to WAITING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from INACTIVE to WAITING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:step][12:13] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 COMMAND__3 0x1eeedf0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state WAITING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node ASSIGNMENT__2 0x1eeebe0 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Integer count 0x1eee4b8 [a](11))
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[AllFinished]result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state WAITING
[Node:getDestState] COMMAND__3 0x1eeedf0 WAITING -> EXECUTING. START_CONDITION and PRE_CONDITION are both true.
[Node:checkConditions]Can (possibly) transition to EXECUTING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 241
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable count
[PlexilExec:resolveResourceConflicts] Node ASSIGNMENT__2 0x1eeebe0 has best priority.
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 242
[PlexilExec:step][12:13] State change queue: COMMAND__3 0x1eeedf0 ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][12:13:0] Transitioning node COMMAND__3 0x1eeedf0 from WAITING to EXECUTING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[Node:execute] Executing node COMMAND__3
[PlexilExec:handleNeedsExecution] Storing action for node COMMAND__3 0x1eeedf0 of type Command to be executed.
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][12:13:1] Transitioning node ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from WAITING to EXECUTING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:execute] Executing node ASSIGNMENT__2
[PlexilExec:handleNeedsExecution] Storing action for node ASSIGNMENT__2 0x1eeebe0 of type Assignment to be executed.
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Integer count 0x1eee4b8 [a](11)) to 12
[ResourceArbiterInterface:partitionCommands] accepting pprint with no resource requests
[Test:testOutput]Executing pprint(Iteration, 11) into noId with ack (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](UNKNOWN))
Iteration 11 
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'BLOCK__0' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'Concurrence__1' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'COMMAND__3' started at 0
[Node:clock]Node 'ASSIGNMENT__2' started at 0
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 12
[PlexilExec:printPlan]
ACTION{
 State: EXECUTING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [a](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [i](0))
 count: (Variable Integer count 0x1eee4b8 [a](12))
  BLOCK__0{
   State: EXECUTING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [a](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [i](0))
    Concurrence__1{
     State: EXECUTING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [a](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [i](0))
      ASSIGNMENT__2{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [a](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [i](0))
      }
      COMMAND__3{
       State: EXECUTING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: WAITING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](0) (LookupOnChange Integer 0x1eef300 [a](10) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   StartCondition: (Finished Boolean BLOCK__00x1eefce0 [a](0))
   ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eef1b8 [i](0))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eef240 [i](0))
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Test:testOutput]Processing event: tick() = 12
[ExternalInterface:lookupReturn](tick(), 12)
[CachedValue:update] updated to 12
[LookupOnChange:update] tick(), valueChanged = 1
[LookupOnChange:toleranceChanged] returning 0
[LookupOnChange:update] tick() threshold exceeded, propagating value and updating thresholds
[LookupOnChange:setThresholds] entered
[StateCacheEntry:updateThresholds] tick() resetting thresholds 10, 14
[CachedValue:update] updated to 10
[CachedValue:update] updated to 14
[LookupOnChange:valueChanged] for tick(): notifying listeners
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:cycle] ==>Start cycle 13
[PlexilExec:step][13:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state EXECUTING
[Node:getDestState] COMMAND__3 0x1eeedf0 EXECUTING -> FAILING. Command node and ancestor exit true.
[Node:checkConditions]Can (possibly) transition to FAILING
[PlexilExec:handleConditionsChanged] Considering node COMMAND__3 0x1eeedf0 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__3 0x1eeedf0 on the state change queue in position 243
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state EXECUTING
[Node:getDestState] Concurrence__1 0x1eee9d0 EXECUTING -> FAILING. List node and ANCESTOR_EXIT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FAILING
[PlexilExec:handleConditionsChanged] Considering node Concurrence__1 0x1eee9d0 for state transition.
[PlexilExec:addStateChangeNode] Placing node Concurrence__1 0x1eee9d0 on the state change queue in position 244
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state EXECUTING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 EXECUTING -> FAILING. Assignment node and ANCESTOR_EXIT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FAILING
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is failing, and is already in the resource contention list
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 245
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state EXECUTING
[Node:getDestState] ACTION 0x1eee210 EXECUTING -> FAILING. List node and EXIT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FAILING
[PlexilExec:handleConditionsChanged] Considering node ACTION 0x1eee210 for state transition.
[PlexilExec:addStateChangeNode] Placing node ACTION 0x1eee210 on the state change queue in position 246
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state EXECUTING
[Node:getDestState] BLOCK__0 0x1eee7c0 EXECUTING -> FAILING. List node and ANCESTOR_EXIT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FAILING
[PlexilExec:handleConditionsChanged] Considering node BLOCK__0 0x1eee7c0 for state transition.
[PlexilExec:addStateChangeNode] Placing node BLOCK__0 0x1eee7c0 on the state change queue in position 247
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state WAITING
[Node:getDestState] COMMAND__4 0x1eee570 WAITING -> FINISHED. ANCESTOR_EXIT_CONDITION true.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node COMMAND__4 0x1eee570 for state transition.
[PlexilExec:addStateChangeNode] Placing node COMMAND__4 0x1eee570 on the state change queue in position 248
[PlexilExec:resolveResourceConflicts] Ignoring Assignments for variable count, which has a retraction pending
[PlexilExec:step][13:0] State change queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[PlexilExec:step][13:0:0] Transitioning node COMMAND__3 0x1eeedf0 from EXECUTING to FAILING
[Node:transition]Transitioning COMMAND__3 0x1eeedf0 from EXECUTING to FAILING at 0
[Test:testOutput]Aborting pprint(Iteration, 11)
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__3 0x1eeedf0
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][13:0:1] Transitioning node Concurrence__1 0x1eee9d0 from EXECUTING to FAILING
[Node:transition]Transitioning Concurrence__1 0x1eee9d0 from EXECUTING to FAILING at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][13:0:2] Transitioning node ASSIGNMENT__2 0x1eeebe0 from EXECUTING to FAILING
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from EXECUTING to FAILING at 0
[Node:abort]Aborting node ASSIGNMENT__2 0x1eeebe0
[PlexilExec:step][13:0:3] Transitioning node ACTION 0x1eee210 from EXECUTING to FAILING
[Node:transition]Transitioning ACTION 0x1eee210 from EXECUTING to FAILING at 0
[PlexilExec:notifyNodeConditionChanged] for node ACTION 0x1eee210
[PlexilExec:notifyNodeConditionChanged] for node BLOCK__0 0x1eee7c0
[PlexilExec:step][13:0:4] Transitioning node BLOCK__0 0x1eee7c0 from EXECUTING to FAILING
[Node:transition]Transitioning BLOCK__0 0x1eee7c0 from EXECUTING to FAILING at 0
[PlexilExec:notifyNodeConditionChanged] for node COMMAND__4 0x1eee570
[PlexilExec:step][13:0:5] Transitioning node COMMAND__4 0x1eee570 from WAITING to FINISHED
[Node:transition]Transitioning COMMAND__4 0x1eee570 from WAITING to FINISHED at 0
[Node:outcome]Outcome of COMMAND__4 0x1eee570 is SKIPPED
[PlexilExec:performAssignments] performing 0 assignments and 1 retractions
[Test:testOutput]Restoring previous value of (Variable Integer count 0x1eee4b8 [a](12))
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'COMMAND__4' finished at 0 (19)
[ExecListener:implementNotifyAssignment] default method called
[PlexilExec:cycle] ==>End cycle 13
[PlexilExec:printPlan]
ACTION{
 State: FAILING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [i](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [a](0))
 count: (Variable Integer count 0x1eee4b8 [a](11))
  BLOCK__0{
   State: FAILING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [i](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [a](0))
    Concurrence__1{
     State: FAILING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [i](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [a](0))
      ASSIGNMENT__2{
       State: FAILING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (InternalVariable Boolean ack 0x1eeed30 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeed70 [a](1))
      }
      COMMAND__3{
       State: FAILING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: FINISHED (0)
   Outcome: SKIPPED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 14
[PlexilExec:step][14:0] Check queue: COMMAND__3 0x1eeedf0 Concurrence__1 0x1eee9d0 ASSIGNMENT__2 0x1eeebe0 ACTION 0x1eee210 BLOCK__0 0x1eee7c0 COMMAND__4 0x1eee570 
[Node:checkConditions]Checking condition change for node COMMAND__3 0x1eeedf0
[Node:getDestState]Getting destination state for COMMAND__3 0x1eeedf0 from state FAILING
[Node:getDestState] COMMAND__3 0x1eeedf0 FAILING -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FAILING
[AllWaitingOrFinished] result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 FAILING -> no change.
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FAILING
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FAILING -> FINISHED. Assignment node, abort complete, and parent exited.
[Node:checkConditions]Can (possibly) transition to FINISHED
[PlexilExec:handleConditionsChanged] Considering node ASSIGNMENT__2 0x1eeebe0 for state transition.
[PlexilExec:handleConditionsChanged] Node ASSIGNMENT__2 0x1eeebe0 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node ASSIGNMENT__2 0x1eeebe0 from contention for variable (Variable Integer count 0x1eee4b8 [a](11))
[PlexilExec:removeFromResourceContention] node ASSIGNMENT__2 0x1eeebe0 was only node assigning (Variable Integer count 0x1eee4b8 [a](11)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node ASSIGNMENT__2 0x1eeebe0 on the state change queue in position 249
[Node:checkConditions]Checking condition change for node ACTION 0x1eee210
[Node:getDestState]Getting destination state for ACTION 0x1eee210 from state FAILING
[AllWaitingOrFinished] result = false
[Node:getDestState] ACTION 0x1eee210 FAILING -> no change.
[Node:checkConditions]Checking condition change for node BLOCK__0 0x1eee7c0
[Node:getDestState]Getting destination state for BLOCK__0 0x1eee7c0 from state FAILING
[AllWaitingOrFinished] result = false
[Node:getDestState] BLOCK__0 0x1eee7c0 FAILING -> no change.
[Node:checkConditions]Checking condition change for node COMMAND__4 0x1eee570
[Node:getDestState]Getting destination state for COMMAND__4 0x1eee570 from state FINISHED
[Node:getDestState] COMMAND__4 0x1eee570 FINISHED -> no change.
[PlexilExec:step][14:0] State change queue: ASSIGNMENT__2 0x1eeebe0 
[PlexilExec:step][14:0:0] Transitioning node ASSIGNMENT__2 0x1eeebe0 from FAILING to FINISHED
[Node:transition]Transitioning ASSIGNMENT__2 0x1eeebe0 from FAILING to FINISHED at 0
[PlexilExec:notifyNodeConditionChanged] for node ASSIGNMENT__2 0x1eeebe0
[Node:outcome]Outcome of ASSIGNMENT__2 0x1eeebe0 is INTERRUPTED
[PlexilExec:notifyNodeConditionChanged] for node Concurrence__1 0x1eee9d0
[PlexilExec:step][14:1] Check queue: ASSIGNMENT__2 0x1eeebe0 Concurrence__1 0x1eee9d0 
[Node:checkConditions]Checking condition change for node ASSIGNMENT__2 0x1eeebe0
[Node:getDestState]Getting destination state for ASSIGNMENT__2 0x1eeebe0 from state FINISHED
[Node:getDestState] ASSIGNMENT__2 0x1eeebe0 FINISHED -> no change.
[Node:checkConditions]Checking condition change for node Concurrence__1 0x1eee9d0
[Node:getDestState]Getting destination state for Concurrence__1 0x1eee9d0 from state FAILING
[AllWaitingOrFinished] result = false
[Node:getDestState] Concurrence__1 0x1eee9d0 FAILING -> no change.
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[ExecListener:implementNotifyNodeTransitions] default method called
[Node:clock]Node 'ASSIGNMENT__2' finished at 0 (20)
[PlexilExec:cycle] ==>End cycle 14
[PlexilExec:printPlan]
ACTION{
 State: FAILING (0)
 ExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
 InvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
[AllFinished]result = false
 EndCondition: (AllChildrenFinished Boolean ACTION0x1eee390 [i](0))
[AllWaitingOrFinished] result = false
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean ACTION0x1eee348 [a](0))
 count: (Variable Integer count 0x1eee4b8 [a](11))
  BLOCK__0{
   State: FAILING (0)
   AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
   AncestorInvariantCondition: (NoChildFailed Boolean ACTION0x1eef0d0 [a](1))
   InvariantCondition: (NoChildFailed Boolean BLOCK__00x1eef900 [a](1))
[AllFinished]result = false
   EndCondition: (AllChildrenFinished Boolean BLOCK__00x1eee940 [i](0))
   RepeatCondition: (Constant Boolean 0x7f5ab8b061d0 [a](1))
[AllWaitingOrFinished] result = false
   ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean BLOCK__00x1eee8f8 [a](0))
    Concurrence__1{
     State: FAILING (0)
     AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
     AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
[AllFinished]result = false
     EndCondition: (AllChildrenFinished Boolean Concurrence__10x1eeeb50 [i](0))
[AllWaitingOrFinished] result = false
     ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean Concurrence__10x1eeeb08 [a](0))
      ASSIGNMENT__2{
       State: FINISHED (0)
       Outcome: INTERRUPTED
       Failure type: PARENT_EXITED
      }
      COMMAND__3{
       State: FAILING (0)
       AncestorExitCondition: (GT Boolean 0x1eef3c0 [a](1) (LookupOnChange Integer 0x1eef300 [a](12) name (Constant String 0x1eee780 [a](tick)) ) (Constant Integer 0x1eee710 [a](10)))
       AncestorInvariantCondition: (AND Boolean 0x1eef950 [a](1) (NoChildFailed Boolean BLOCK__00x1eef900 [a](1)) (NoChildFailed Boolean ACTION0x1eef0d0 [a](1)))
       ActionCompleteCondition: (CommandHandleKnown Boolean 0x1eeef48 [i](1))
       AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x1eeefd0 [a](0))
       Command handle: (CommandHandleVariable NodeCommandHandle 0x1eeef90 [a](COMMAND_SUCCESS))
      }
    }
  }
  COMMAND__4{
   State: FINISHED (0)
   Outcome: SKIPPED
   Command handle: (CommandHandleVariable NodeCommandHandle 0x1eef200 [i](UNKNOWN))
  }
}

[Time]Time spent in execution: 207535
[ListNode:~ListNode] destructor for ACTION
[ListNode:cleanUpConditions] for ACTION
[ListNode:cleanUpChildConditions] for ACTION
[ListNode:cleanUpConditions] for BLOCK__0
[ListNode:cleanUpChildConditions] for BLOCK__0
[ListNode:cleanUpConditions] for Concurrence__1
[ListNode:cleanUpChildConditions] for Concurrence__1
[Node:cleanUpConditions] for ASSIGNMENT__2
[Node:cleanUpConditions] for COMMAND__3
[CommandNode:cleanUpNodeBody]<COMMAND__3> entered
[Node:cleanUpConditions] for Concurrence__1
[ListNode:cleanUpNodeBody] for Concurrence__1
[AssignmentNode:~AssignmentNode]<ASSIGNMENT__2> Removing assignment.
[NodeImpl:~NodeImpl] base class destructor for ASSIGNMENT__2
[Node:cleanUpVars] for ASSIGNMENT__2
[CommandNode:~CommandNode] destructor for COMMAND__3
[CommandNode:~CommandNode]<COMMAND__3> Removing command.
[NodeImpl:~NodeImpl] base class destructor for COMMAND__3
[Node:cleanUpVars] for COMMAND__3
[Node:cleanUpConditions] for BLOCK__0
[Node:cleanUpConds]<BLOCK__0> Removing condition AncestorInvariantCondition
[Node:cleanUpConds]<BLOCK__0> Removing condition InvariantCondition
[Node:cleanUpConditions] for COMMAND__4
[Node:cleanUpConds]<COMMAND__4> Removing condition StartCondition
[ListNode:cleanUpNodeBody] for BLOCK__0
[ListNode:~ListNode] destructor for Concurrence__1
[NodeImpl:~NodeImpl] base class destructor for Concurrence__1
[Node:cleanUpVars] for Concurrence__1
[CommandNode:cleanUpNodeBody]<COMMAND__4> entered
[Node:cleanUpConditions] for ACTION
[Node:cleanUpConds]<ACTION> Removing condition ExitCondition
[Lookup:unregister] tick()
[StateCacheEntry:unregisterLookup] tick()
[StateCacheEntry:unregisterLookup] tick() no lookups remaining, unsubscribing
[Node:cleanUpConds]<ACTION> Removing condition InvariantCondition
[ListNode:cleanUpNodeBody] for ACTION
[ListNode:~ListNode] destructor for BLOCK__0
[NodeImpl:~NodeImpl] base class destructor for BLOCK__0
[Node:cleanUpVars] for BLOCK__0
[CommandNode:~CommandNode] destructor for COMMAND__4
[CommandNode:~CommandNode]<COMMAND__4> Removing command.
[NodeImpl:~NodeImpl] base class destructor for COMMAND__4
[Node:cleanUpVars] for COMMAND__4
[NodeImpl:~NodeImpl] base class destructor for ACTION
[Node:cleanUpVars] for ACTION
[Node:cleanUpVars]<ACTION> Removing (Variable Integer count 0x1eee4b8 [a](11))
