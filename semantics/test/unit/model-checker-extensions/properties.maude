mod TEST--MODEL-CHECKER-EXTENSIONS--PROPERTIES is

pr TEST-BASE .

op test--model-checker-extensions--properties : -> TestResults .
eq test--model-checker-extensions--properties
  = test--commandIsExecuting
  + test--hasCmdHandle?
  + test--hasNoCmdHandle?
  + test--isUnknown?
.

op test--commandIsExecuting : -> TestResults .
eq test--commandIsExecuting =
begin tests

  assert "commandIsExecuting returns true if the command is executing" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : < 'C . 'N : command-on-execution | none > ]
      ) |= commandIsExecuting('C)
    )
  reaches
    testBool(
      true
    )
  end

  assert "commandIsExecuting returns false if the command is not executing" from
    testBool(
      ( stop |
        [ interface : < 'D : command-on-execution | none > ]
      ) |= commandIsExecuting('C)
    )
  reaches
    testBool(
      false
    )
  end

end tests .

op test--hasCmdHandle? : -> TestResults .
eq test--hasCmdHandle? =
begin tests

  assert "hasCmdHandle? returns true if there is a command handle" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : < 'C . 'N : command-on-execution | handle: just(CommandSuccess) > ]
      ) |= hasCmdHandle?('C . 'N, CommandSuccess)
    )
  reaches
    testBool(
      true
    )
  end

  assert "hasCmdHandle? returns false if there is no command handle" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : < 'C . 'N : command-on-execution | handle: nothing > ]
      ) |= hasCmdHandle?('C . 'N, CommandSuccess)
    )
  reaches
    testBool(
      false
    )
  end

  assert "hasCmdHandle? returns false if it has not started executing (and thus there cannot be a handle)" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : none ]
      ) |= hasCmdHandle?('C . 'N, CommandSuccess)
    )
  reaches
    testBool(
      false
    )
  end

end tests .

op test--hasNoCmdHandle? : -> TestResults .
eq test--hasNoCmdHandle? =
begin tests

  assert "hasNoCmdHandle? returns true if the command identifier is not fully qualified and thus is cannot be found" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : < 'C . 'N : command-on-execution | handle: nothing > ]
      ) |= hasNoCmdHandle?('C)
    )
  reaches
    testBool(
      true
    )
  end

  assert "hasNoCmdHandle? returns false if there is a command handle" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : < 'C . 'N : command-on-execution | handle: just(CommandSuccess) > ]
      ) |= hasNoCmdHandle?('C . 'N)
    )
  reaches
    testBool(
      false
    )
  end

  assert "hasNoCmdHandle? returns true if the command has started executing and there is no command handle" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : < 'C . 'N : command-on-execution | handle: nothing > ]
      ) |= hasNoCmdHandle?('C . 'N)
    )
  reaches
    testBool(
      true
    )
  end

  assert "hasNoCmdHandle? returns true if the command has not started executing (and thus there cannot be a handle)" from
    testBool(
      ( stop |
        [ nodes : < 'N : command | status: executing > ]
        [ interface : none ]
      ) |= hasNoCmdHandle?('C . 'N)
    )
  reaches
    testBool(
      true
    )
  end

end tests .

op test--isUnknown? : -> TestResults .
eq test--isUnknown? =
begin tests
  assert "isUnknown? returns true if the expression evaluates to unknown" from
    testBool(
      ( stop |
        [ memory : none ]
        [ interface : none ]
        [ environment : mtenvironment ]
      ) |= isUnknown?(const(unknown) < const(val(9.2)))
    )
  reaches
    testBool(
      true
    )
  end

  assert "isUnknown? returns false if the expression evaluates to a concrete value" from
    testBool(
      ( stop |
        [ memory : none ]
        [ interface : none ]
        [ environment : mtenvironment ]
      ) |= isUnknown?(const(val(6.3)) < const(val(9.2)))
    )
  reaches
    testBool(
      false
    )
  end
end tests .

endm
