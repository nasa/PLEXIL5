fmod EXTENDED-EXPRESSION is
 extending VALUE .
 protecting INT .
 protecting STATUS .
 protecting OUTCOME .
 protecting QUALIFIED .
 protecting EXPRESSION .
 protecting COMMAND-HANDLE .
 extending FUNCTION .

 op _+_           : Expression Expression -> Expression [prec 13 format (o sc o o)] .
 op _-_           : Expression Expression -> Expression [prec 13 format (o sc o o)] .
 op _*_           : Expression Expression -> Expression [prec 12 format (o sc o o)] .
 op _rem_         : Expression Expression -> Expression [prec 12 format (o sc o o)] .
 op _<_           : Expression Expression -> Expression [prec 15 format (o sc o o)] .
 op _<=_          : Expression Expression -> Expression [prec 15 format (o sc o o)] .
 op _>_           : Expression Expression -> Expression [prec 15 format (o sc o o)] .
 op _>=_          : Expression Expression -> Expression [prec 15 format (o sc o o)] .
 op _and_         : Expression Expression -> Expression [prec 18 format (o sc o o)] .
 op _or_          : Expression Expression -> Expression [prec 18 format (o sc o o)] .
 op _equ_         : Expression Expression -> Expression [prec 20 format (o sc o o)] .
 op _nequ_        : Expression Expression -> Expression [prec 20 format (o sc o o)] .
 op not_          : Expression            -> Expression [prec 17 format (c o o)] .
 op isKnown       : Expression            -> Expression .
 op noChildFailed           :             -> Expression .
 op noChildFailed           : NeQualified -> Expression .
 op isFinished?             : NeQualified -> Expression .
 op hasSucceeded?           : NeQualified -> Expression .
 op hasPostconditionFailed? : NeQualified -> Expression .
 op hasSkipped?             : NeQualified -> Expression .
 op hasRcvAck?              : NeQualified -> Expression .


*** Function Ids
**** Absolute value (of integers and reals)
 op absp  : -> Function .
**** Square root (of reals)
 op sqrt  : -> Function .
**** Boolean negation
 op notp  : -> Function .

*** Predicates on processes
 op isStatus?         : NeQualified Status      -> Expression .
 op isOutcome?        : NeQualified Outcome     -> Expression .
 op isOutcomeFailure? : NeQualified             -> Expression .
 op isOutcomeSuccess? : NeQualified             -> Expression .
 op isFailure?        : NeQualified FailureType -> Expression .
 op areChildren?      : NeQualified Status      -> Expression .
 op areChildren?      : Status                  -> Expression .
 op cmdHandleRcv?     : NeQualified             -> Expression .
 op cmdHandleRcv?     :                         -> Expression .
 op cmdHandleIs?      : NeQualified CommandHandle -> Expression .
endfm